;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   ter out 29 2024
; Processor: PIC16F887
; Compiler:  MPASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

#include p16f887.inc                ; Include register definition file

;====================================================================
; VARIABLES
;====================================================================
CBLOCK  0x20           
   count1
   X0
   X1
   Y0
   Y1
   H
   L
   COR1
   COR2
   COR3
ENDC                   
;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

; Reset Vector
RST   code  0x0 
      goto  Start

PGM   code
Start
   BSF STATUS, RP0    
   BCF STATUS, RP1    
   CLRF TRISC                
   CLRF TRISB		      
   CLRF TRISD
   CLRF SSPSTAT              
										   
   BCF STATUS, RP0    
   BCF STATUS, RP1               
   CLRF PORTD      
   CLRF INTCON      ; Desabilitar interrupções
   
   MOVLW 0x22                
   MOVWF SSPCON
   MOVLW 0x30       ; Configurando o pre-scale do timer1 para 8
   MOVWF T1CON
 
beginDisplay
   MOVLW 0X01       ; Comando SWRESET
   CALL enviarComando
   CALL delay130ms
   
   MOVLW 0X11       ; Comando SLPOUT Sleep Out
   CALL enviarComando
   CALL delay130ms 
   
   MOVLW 0X29       ; Comando DISPON Display On
   CALL enviarComando
   CALL delay130ms

desenharDisplay 
   ; Variáveis para mudança de cor RGB
   MOVLW .0         ; VERMELHO
   MOVWF COR1
   MOVLW .0         ; VERDE
   MOVWF COR2
   MOVLW .255       ; AZUL
   MOVWF COR3
   
   ;Variáveis para posição inical e final do desenho
   MOVLW .60
   MOVWF X0
   MOVLW .100
   MOVWF X1
   MOVLW .0
   MOVWF Y0
   MOVLW .10
   MOVWF Y1
   
   ;Variávei para largura (L) e altura (H) do retângulo desenhado
   MOVLW .10
   MOVWF L
   MOVLW .100
   MOVWF H
   
   ; Chamada das funções de desenho
   CALL desenharLinhaVertical
  
loop  
   MOVF COR1, W
   CALL enviarDados
   MOVF COR2, W
   CALL enviarDados
   MOVF COR3, W
   CALL enviarDados
   GOTO  loop

definirIntervalo
   MOVLW 0X2A       ; Comando CASET Column Address Set
   CALL enviarComando
   CALL microDelay
   MOVLW 0X00
   CALL enviarDados
   MOVF X0, W
   CALL enviarDados
   MOVLW 0X00
   CALL enviarDados
   MOVF X1, W       
   CALL enviarDados
   
   MOVLW 0X2B       ; Comando RASET Row Address Set
   CALL enviarComando
   CALL microDelay
   MOVLW 0X00
   CALL enviarDados
   MOVF Y0, W
   CALL enviarDados
   MOVLW 0X00
   CALL enviarDados
   MOVF Y1, W      
   CALL enviarDados
   
   MOVLW 0X2C      ; Comando RAMWR Memory Write
   CALL enviarComando
   CALL microDelay
   RETURN
   
desenharLinhaVertical
   DECF H
   MOVF  X0, W
   MOVWF X1
   MOVF  Y0, W
   MOVWF Y1
   
   MOVF  H, W
   ADDWF Y1, 1
   
   CALL definirIntervalo
   RETURN
   
preencherTela
   MOVLW .0
   MOVWF X0
   MOVLW .131
   MOVWF X1
   
   MOVLW .0
   MOVWF Y0
   MOVLW .161
   MOVWF Y1
   
   CALL definirIntervalo
   RETURN
   
desenharRetanguloPreenchido
   DECF H
   DECF L
   MOVF  X0, W
   MOVWF X1
   MOVF  Y0, W
   MOVWF Y1
   
   MOVF  L, W
   ADDWF X1, 1
   MOVF  H, W
   ADDWF Y1, 1
   
   CALL definirIntervalo
   RETURN
   
   
enviarComando
   BCF STATUS, RP0    
   BCF STATUS, RP1
   BCF PORTB, 0      ; Definindo o envio de um comando
   MOVWF SSPBUF      ; Coloca o comando definido no buffer de transmissão
   RETURN
   
enviarDados
   BCF STATUS, RP0    
   BCF STATUS, RP1
   BSF PORTB, 0      
   MOVWF SSPBUF
   CALL microDelay
   RETURN
   
delay130ms
   MOVLW 0X02
   MOVWF count1
   
   begin1
      MOVLW 0x61      ; Configuração do tempo do timer  
      MOVWF TMR1H     ;...  
      MOVLW 0x4F      ;...  
      MOVWF TMR1L     ;...
       
      BSF T1CON, TMR1ON  ; Liga o Timer1
      BCF PIR1, TMR1IF   ; Limpa a flag de interrupção do Timer1 
      
      delayLoop
	 BTFSS PIR1, TMR1IF  ; Verifica se a flag TMR1IF foi acionada (timer1 extorou)
	 GOTO  delayLoop     ; Se não, continua no loop 
      BCF T1CON, TMR1ON  ; Desliga o Timer1
      BCF PIR1, TMR1IF   ; Limpa a flag de interrupção novamente
      
   DECFSZ count1
   GOTO begin1
   RETURN
   
microDelay
   MOVLW 0xFF       
   MOVWF TMR1H       
   MOVLW 0xF0      
   MOVWF TMR1L     
    
   BSF T1CON, TMR1ON  
   BCF PIR1, TMR1IF    
   
   delayLoop1
      BTFSS PIR1, TMR1IF  
      GOTO  delayLoop1     
   BCF T1CON, TMR1ON 
   BCF PIR1, TMR1IF   
   RETURN

    


;====================================================================
      END
